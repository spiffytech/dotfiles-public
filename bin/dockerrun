#!/bin/bash

set -e

## Unnecessary. Join with leading separatator: ${VOLUMES[@]/#/ -v } where ' -v ' is the separator
#arrayJoin() {
#    # http://stackoverflow.com/a/23673883/191438
#    # $1 is return variable name
#    # $2 is sep
#    # $3... are the elements to join
#    local retname=$1 sep=$2 ret=$3
#    shift 3 || shift $(($#))
#    printf -v "$retname" "%s" "$ret${@/#/$sep}"
#}

# Search up the file tree for .drun.sh
x=`pwd`;
while [ "$x" != "/" ];
do
    if [[ -e "$x/.drun.sh" && -f "$x/.drun.sh" ]]; then
        # Changing directories lets us get a correct `pwd` inside the script
        cd $x
        PROJECTROOT=$(pwd)  # Assume .drun.sh is at our project root
        source "$x/.drun.sh"
        cd - > /dev/null
        break
    fi
    x=`dirname "$x"`
done

[ -z $CONTAINER ] && CONTAINER=debian #spiffytech/fsharp-mono-xsp
[ -z $MOUNTDIR ] && MOUNTDIR=/source
[ -z $PROJECTROOT ] && PROJECTROOT=$(pwd)

# If the project gets mounted into the container at /source
# And our project root on the host is ~/Documents/programs/project
# And our cwd is                      ~/Documents/programs/projects/a/b/c
# This sets the Docker working directory to /source/a/b/c
tmp=$(pwd)
WORKDIR=`echo $MOUNTDIR${tmp#$PROJECTROOT}`
unset tmp

VOLUMES+=("$PROJECTROOT:$MOUNTDIR")  # mount pwd into container

# Handle when SELinux is enforcing (must append :Z to all volume strings)
# http://stackoverflow.com/a/31334443/191438
command -v sestatus >/dev/null 2>&1 && HAS_SELINUX=true || HAS_SELINUX=false
if [[ HAS_SELINUX == "true" ]]; then
    SELINUX_MODE=`sestatus | grep 'Current mode' | awk -F' ' '{print $3}'`
    if [[ SELINUX_MODE == "enforcing" ]]; then
        VOLSTMP=("${VOLUMES[@]}")
        VOLUMES=()
        for v in "${VOLSTMP[@]}"; do
            VOLUMES+=("$v:Z")
        done

    fi
fi

# Add volumes from .drun.sh
# .drun.sh **ONLY**. Can't pass arrays to other processes as first-class data
# types in Bash
if [[ ! -z $VOLUMES ]]; then
    VOLUMES_STR=`printf "%s" "${VOLUMES[@]/#/ -v }"`  # arrayJoin omits leading $separator
else
    VOLUMES_STR=""
fi

# Add volumes from .drun.sh
# .drun.sh **ONLY**. Can't pass arrays to other processes as first-class data
# types in Bash
if [[ ! -z $ENVVARS ]]; then
    # Leading space in format string is /not/ a mistake. Without that, printf
    # treats the '-e' as a printf flag, not a string literal.
    ENVVAR_STR=`printf " %s" "${ENVVARS[@]/#/ -e }"`  # arrayJoin omits leading $separator
else
    ENVVAR_STR=""
fi

[ -t 1 ] && ISTTY="-it" || ISTTY=""

docker run --rm $ISTTY $PORT $VOLUMES_STR $ENVVAR_STR -w $WORKDIR $DOCKEROPTS $CONTAINER "$@"
